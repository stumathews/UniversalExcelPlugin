/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


/**
 * @class
 * Initializes a new instance of the AggregateSpec class.
 * @constructor
 * @member {string} [key]
 * @member {string} [op] Possible values include: 'Sum', 'Proportion'
 */
export interface AggregateSpec {
  key?: string;
  op?: string;
}

/**
 * @class
 * Initializes a new instance of the PropertyFilter class.
 * @constructor
 * @member {string} [left]
 * @member {string} [operator] Possible values include: 'Equals', 'NotEquals',
 * 'GreaterThan', 'GreaterThanOrEqualTo', 'LessThan', 'LessThanOrEqualTo', 'In'
 * @member {object} [right]
 * @member {string} [rightOperandType] Possible values include: 'Absolute',
 * 'Property'
 */
export interface PropertyFilter {
  left?: string;
  operator?: string;
  right?: any;
  rightOperandType?: string;
}

/**
 * @class
 * Initializes a new instance of the AggregationRequest class.
 * @constructor
 * Specification object for the parameters of an aggregation
 *
 * @member {string} [recipeScope]
 * @member {string} [recipeKey]
 * @member {boolean} [loadReferencePortfolio]
 * @member {date} [asAt] The asAt date to use
 * @member {date} [effectiveDate]
 * @member {array} [metrics]
 * @member {array} [groupBy]
 * @member {array} [filters]
 * @member {number} [limit]
 * @member {string} [sort]
 */
export interface AggregationRequest {
  recipeScope?: string;
  recipeKey?: string;
  loadReferencePortfolio?: boolean;
  asAt?: Date;
  effectiveDate?: Date;
  metrics?: AggregateSpec[];
  groupBy?: string[];
  filters?: PropertyFilter[];
  limit?: number;
  sort?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorMessage class.
 * @constructor
 * @member {number} [status] The status code that will be returned to the
 * client
 * @member {string} [code] The Finbourne specific error-code that encapsulates
 * the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [property] The part of the resource which provoked the
 * error (e.g. field)
 * @member {string} [message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [developerMessage] A technical error message that contains
 * the details of the issue and how it might be fixed.
 * @member {string} [moreInfo] A link to the endpoint that can provide the dev
 * with more information about that class of error.
 */
export interface ErrorMessage {
  readonly status?: number;
  readonly code?: string;
  readonly property?: string;
  readonly message?: string;
  readonly developerMessage?: string;
  readonly moreInfo?: string;
}

/**
 * @class
 * Initializes a new instance of the ResponseMeta class.
 * @constructor
 * @member {number} [duration]
 * @member {boolean} [success]
 * @member {string} [requestId]
 */
export interface ResponseMeta {
  duration?: number;
  success?: boolean;
  requestId?: string;
}

/**
 * @class
 * Initializes a new instance of the IDataRecord class.
 * @constructor
 * @member {number} [fieldCount]
 */
export interface IDataRecord {
  readonly fieldCount?: number;
}

/**
 * @class
 * Initializes a new instance of the FieldSchema class.
 * @constructor
 * @member {string} [scope]
 * @member {string} [name]
 * @member {string} [displayName]
 * @member {string} [type] Possible values include: 'String', 'Int', 'Decimal',
 * 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys', 'Percentage',
 * 'Currency', 'BenchmarkType', 'InternalId'
 * @member {boolean} [isMetric]
 * @member {number} [displayOrder]
 * @member {object} [propertySchema]
 */
export interface FieldSchema {
  scope?: string;
  name?: string;
  displayName?: string;
  type?: string;
  isMetric?: boolean;
  displayOrder?: number;
  propertySchema?: { [propertyName: string]: FieldSchema };
}

/**
 * @class
 * Initializes a new instance of the KeyValuePairPropertyKeyFieldSchema class.
 * @constructor
 * @member {string} [key]
 * @member {object} [value]
 * @member {string} [value.scope]
 * @member {string} [value.name]
 * @member {string} [value.displayName]
 * @member {string} [value.type] Possible values include: 'String', 'Int',
 * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
 * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
 * @member {boolean} [value.isMetric]
 * @member {number} [value.displayOrder]
 * @member {object} [value.propertySchema]
 */
export interface KeyValuePairPropertyKeyFieldSchema {
  readonly key?: string;
  readonly value?: FieldSchema;
}

/**
 * @class
 * Initializes a new instance of the ResultDataSchema class.
 * @constructor
 * @member {array} [nodeValueSchema]
 * @member {object} [propertySchema]
 */
export interface ResultDataSchema {
  nodeValueSchema?: KeyValuePairPropertyKeyFieldSchema[];
  propertySchema?: { [propertyName: string]: FieldSchema };
}

/**
 * @class
 * Initializes a new instance of the GetAggregationResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {array} [data]
 * @member {string} [aggregationCurrency]
 * @member {object} [dataSchema]
 * @member {array} [dataSchema.nodeValueSchema]
 * @member {object} [dataSchema.propertySchema]
 */
export interface GetAggregationResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
  data?: IDataRecord[];
  aggregationCurrency?: string;
  dataSchema?: ResultDataSchema;
}

/**
 * @class
 * Initializes a new instance of the IErrorResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 */
export interface IErrorResponse {
  error?: ErrorMessage;
}

/**
 * @class
 * Initializes a new instance of the QualifiedId class.
 * @constructor
 * This is an identifier that can be used to indicate not only an id, but its
 * scope, and the entity type to which it refers. This can be passed back to
 * the client.
 *
 * @member {string} [id]
 * @member {string} [scope]
 * @member {string} [type] Possible values include: 'Group', 'Portfolio',
 * 'ReferencePortfolio'
 */
export interface QualifiedId {
  readonly id?: string;
  readonly scope?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the AggregationResponseNodeIDataRecord class.
 * @constructor
 * @member {string} [description]
 * @member {number} [idx]
 * @member {object} [id]
 * @member {string} [id.id]
 * @member {string} [id.scope]
 * @member {string} [id.type] Possible values include: 'Group', 'Portfolio',
 * 'ReferencePortfolio'
 * @member {object} [properties]
 * @member {number} [properties.fieldCount]
 * @member {array} [children]
 */
export interface AggregationResponseNodeIDataRecord {
  description?: string;
  idx?: number;
  id?: QualifiedId;
  properties?: IDataRecord;
  children?: AggregationResponseNodeIDataRecord[];
}

/**
 * @class
 * Initializes a new instance of the NestedDataAggregationResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [data]
 * @member {string} [data.description]
 * @member {number} [data.idx]
 * @member {object} [data.id]
 * @member {string} [data.id.id]
 * @member {string} [data.id.scope]
 * @member {string} [data.id.type] Possible values include: 'Group',
 * 'Portfolio', 'ReferencePortfolio'
 * @member {object} [data.properties]
 * @member {number} [data.properties.fieldCount]
 * @member {array} [data.children]
 * @member {string} [aggregationCurrency]
 * @member {object} [dataSchema]
 * @member {array} [dataSchema.nodeValueSchema]
 * @member {object} [dataSchema.propertySchema]
 */
export interface NestedDataAggregationResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
  data?: AggregationResponseNodeIDataRecord;
  aggregationCurrency?: string;
  dataSchema?: ResultDataSchema;
}

/**
 * @class
 * Initializes a new instance of the KeyValuePairStringDateTimeOffset class.
 * @constructor
 * @member {string} [key]
 * @member {date} [value]
 */
export interface KeyValuePairStringDateTimeOffset {
  readonly key?: string;
  readonly value?: Date;
}

/**
 * @class
 * Initializes a new instance of the ListAnalyticStoresResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {array} [items]
 */
export interface ListAnalyticStoresResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  items?: KeyValuePairStringDateTimeOffset[];
}

/**
 * @class
 * Initializes a new instance of the CreateAnalyticStoreResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 */
export interface CreateAnalyticStoreResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
}

/**
 * @class
 * Initializes a new instance of the DeletedEntityResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 */
export interface DeletedEntityResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
}

/**
 * @class
 * Initializes a new instance of the GetAnalyticStoreResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 */
export interface GetAnalyticStoreResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
}

/**
 * @class
 * Initializes a new instance of the SecurityUid class.
 * @constructor
 * @member {string} [uid]
 */
export interface SecurityUid {
  uid?: string;
}

/**
 * @class
 * Initializes a new instance of the SecurityAnalyticData class.
 * @constructor
 * @member {object} [id]
 * @member {string} [id.uid]
 * @member {number} [value]
 */
export interface SecurityAnalyticData {
  id?: SecurityUid;
  value?: number;
}

/**
 * @class
 * Initializes a new instance of the InsertAnalyticsResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 */
export interface InsertAnalyticsResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
}

/**
 * @class
 * Initializes a new instance of the Property class.
 * @constructor
 * This is intended to be the external facing property specification data type.
 *
 * @member {string} key The property key made up of the PropertyDomain, scope
 * and name delimited with a '/'
 * e.g. trade/myscope/myproperty
 * @member {object} value
 * @member {date} [effectiveDate] Date for which the property is effective from
 * @member {number} [version]
 */
export interface Property {
  key: string;
  value: any;
  effectiveDate?: Date;
  version?: number;
}

/**
 * @class
 * Initializes a new instance of the SecurityClassificationData class.
 * @constructor
 * @member {object} [uid]
 * @member {string} [uid.uid]
 * @member {date} [effectiveDate]
 * @member {array} [properties]
 */
export interface SecurityClassificationData {
  uid?: SecurityUid;
  effectiveDate?: Date;
  properties?: Property[];
}

/**
 * @class
 * Initializes a new instance of the UpsertClassificationsResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 */
export interface UpsertClassificationsResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
}

/**
 * @class
 * Initializes a new instance of the ScopedIdentifier class.
 * @constructor
 * Class for an external identifier, ie one containing a scope and a name
 * See https://github.com/finbourne/wiki/wiki/Identifiers
 *
 * @member {string} [scope]
 * @member {string} [name]
 */
export interface ScopedIdentifier {
  readonly scope?: string;
  readonly name?: string;
}

/**
 * @class
 * Initializes a new instance of the PortfolioGroupState class.
 * @constructor
 * DTO class used when creating a new portfolio group
 *
 * @member {string} [name]
 * @member {string} [description]
 * @member {array} [values]
 * @member {array} [subGroups]
 */
export interface PortfolioGroupState {
  name?: string;
  description?: string;
  values?: ScopedIdentifier[];
  subGroups?: ScopedIdentifier[];
}

/**
 * @class
 * Initializes a new instance of the Version class.
 * @constructor
 * Describes the version metadata of an entity.
 *
 * @member {number} [number] The monotonically-increasing version number for
 * this individual version.
 * @member {date} [validFromDate] The time at which this version became valid.
 * @member {date} [validToDate] The time at which this version ceased to be
 * valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [asAtDate] The time at which this version was durably
 * persisted.
 * @member {string} [updatedBy] The name of the person or system which created
 * this version.
 */
export interface Version {
  readonly number?: number;
  readonly validFromDate?: Date;
  readonly validToDate?: Date;
  readonly asAtDate?: any;
  readonly updatedBy?: string;
}

/**
 * @class
 * Initializes a new instance of the GetPortfolioGroupResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {string} [id]
 * @member {string} [name]
 * @member {string} [description]
 * @member {array} [values]
 * @member {array} [subGroups]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 */
export interface GetPortfolioGroupResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  id?: string;
  name?: string;
  description?: string;
  values?: ScopedIdentifier[];
  subGroups?: ScopedIdentifier[];
  version?: Version;
}

/**
 * @class
 * Initializes a new instance of the GroupDefinitionResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {string} [id]
 * @member {string} [name]
 * @member {string} [description]
 * @member {array} [values]
 * @member {array} [subGroups]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 */
export interface GroupDefinitionResponse {
  self?: string;
  schema?: string;
  id?: string;
  name?: string;
  description?: string;
  values?: ScopedIdentifier[];
  subGroups?: ScopedIdentifier[];
  version?: Version;
}

/**
 * @class
 * Initializes a new instance of the ListPortfolioGroupResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {array} [items]
 */
export interface ListPortfolioGroupResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  items?: GroupDefinitionResponse[];
}

/**
 * @class
 * Initializes a new instance of the GetLoginResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {string} [name]
 * @member {string} [firstName]
 * @member {string} [defaultScope]
 * @member {string} [sessionContextId]
 * @member {string} [logoUri]
 * @member {string} [valueCurrencyCode]
 * @member {string} [valueCurrencySymbol]
 */
export interface GetLoginResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  name?: string;
  firstName?: string;
  defaultScope?: string;
  sessionContextId?: string;
  logoUri?: string;
  valueCurrencyCode?: string;
  valueCurrencySymbol?: string;
}

/**
 * @class
 * Initializes a new instance of the WebLogMessage class.
 * @constructor
 * A log message structured for provision by a web project
 *
 * @member {string} [version] The semantic version of the remote application
 * submitting the log
 * @member {string} [url] The url of the resource from which the message
 * originated
 * @member {string} [message] The body of the message
 * @member {string} [context] Context as to the occurance of the message
 * @member {string} [severity] The severity of the message. Possible values
 * include: 'Warn', 'Error'
 * @member {string} [stacktrace] Any stacktrace that may be relavent
 * @member {string} [browser] Any browser/user-agent/os related context
 */
export interface WebLogMessage {
  readonly version?: string;
  readonly url?: string;
  readonly message?: string;
  readonly context?: string;
  readonly severity?: string;
  readonly stacktrace?: string;
  readonly browser?: string;
}

/**
 * @class
 * Initializes a new instance of the ResponsePagination class.
 * @constructor
 * @member {boolean} [finalPage]
 * @member {number} [count]
 * @member {number} [totalItems]
 * @member {number} [page]
 * @member {string} [next]
 * @member {string} [previous]
 */
export interface ResponsePagination {
  finalPage?: boolean;
  count?: number;
  totalItems?: number;
  page?: number;
  next?: string;
  previous?: string;
}

/**
 * @class
 * Initializes a new instance of the Personalisation class.
 * @constructor
 * @member {number} [id]
 * @member {string} [scope] Possible values include: 'User', 'Group',
 * 'Default', 'All'
 * @member {string} [scopeValue]
 * @member {string} [settingKey]
 * @member {string} [settingValue]
 * @member {string} [dataType]
 */
export interface Personalisation {
  id?: number;
  scope?: string;
  scopeValue?: string;
  settingKey?: string;
  settingValue?: string;
  dataType?: string;
}

/**
 * @class
 * Initializes a new instance of the GetPersonalisationsResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [pagination]
 * @member {boolean} [pagination.finalPage]
 * @member {number} [pagination.count]
 * @member {number} [pagination.totalItems]
 * @member {number} [pagination.page]
 * @member {string} [pagination.next]
 * @member {string} [pagination.previous]
 * @member {array} [items]
 */
export interface GetPersonalisationsResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  self?: string;
  schema?: string;
  pagination?: ResponsePagination;
  items?: Personalisation[];
}

/**
 * @class
 * Initializes a new instance of the UpsertPersonalisationsResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 */
export interface UpsertPersonalisationsResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
}

/**
 * @class
 * Initializes a new instance of the Portfolio class.
 * @constructor
 * This represents a portfolio owned by a client
 *
 * @member {string} id Portfolio id, must be unique across all portfolios
 * @member {string} name Portfolio name, must be unique across all portfolios
 * @member {date} [created] The original creation date, not the effective date
 * of subsequent modification.
 * @member {string} [referencePortfolioId] If creating a derived portfolio,
 * this is the portfolio id of the reference portfolio
 * @member {string} [referenceScope] If creating a derived portfolio, this is
 * the scope of the reference portfolio
 * @member {string} [type] Possible values include: 'Portfolio',
 * 'ReferencePortfolio'
 */
export interface Portfolio {
  id: string;
  name: string;
  created?: Date;
  referencePortfolioId?: string;
  referenceScope?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the PortfolioDetails class.
 * @constructor
 * This represents the details of a portfolio
 *
 * @member {string} [sourcePortfolioId] The portfolio id that these portfolio
 * details belong to, used when inheriting
 * from a reference portfolio
 * @member {string} [sourceScope] The scope that these portfolio details belong
 * to
 * @member {string} baseCurrency
 */
export interface PortfolioDetails {
  sourcePortfolioId?: string;
  sourceScope?: string;
  baseCurrency: string;
}

/**
 * @class
 * Initializes a new instance of the CreatePortfolioRequest class.
 * @constructor
 * @member {object} [root]
 * @member {string} [root.id] Portfolio id, must be unique across all
 * portfolios
 * @member {string} [root.name] Portfolio name, must be unique across all
 * portfolios
 * @member {date} [root.created] The original creation date, not the effective
 * date
 * of subsequent modification.
 * @member {string} [root.referencePortfolioId] If creating a derived
 * portfolio, this is the portfolio id of the reference portfolio
 * @member {string} [root.referenceScope] If creating a derived portfolio, this
 * is the scope of the reference portfolio
 * @member {string} [root.type] Possible values include: 'Portfolio',
 * 'ReferencePortfolio'
 * @member {object} [details]
 * @member {string} [details.sourcePortfolioId] The portfolio id that these
 * portfolio details belong to, used when inheriting
 * from a reference portfolio
 * @member {string} [details.sourceScope] The scope that these portfolio
 * details belong to
 * @member {string} [details.baseCurrency]
 */
export interface CreatePortfolioRequest {
  root?: Portfolio;
  details?: PortfolioDetails;
}

/**
 * @class
 * Initializes a new instance of the PortfolioPropertiesResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {array} [propertySchema]
 * @member {string} [sourcePortfolioId]
 * @member {string} [sourceScope]
 * @member {array} [properties]
 */
export interface PortfolioPropertiesResponse {
  self?: string;
  schema?: string;
  propertySchema?: KeyValuePairPropertyKeyFieldSchema[];
  sourcePortfolioId?: string;
  sourceScope?: string;
  properties?: Property[];
}

/**
 * @class
 * Initializes a new instance of the PortfolioDetailsResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {string} [baseCurrency]
 * @member {string} [sourcePortfolioId]
 * @member {string} [sourceScope]
 */
export interface PortfolioDetailsResponse {
  self?: string;
  schema?: string;
  baseCurrency?: string;
  sourcePortfolioId?: string;
  sourceScope?: string;
}

/**
 * @class
 * Initializes a new instance of the GetPortfolioRootResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {object} [properties]
 * @member {string} [properties.self]
 * @member {string} [properties.schema]
 * @member {array} [properties.propertySchema]
 * @member {string} [properties.sourcePortfolioId]
 * @member {string} [properties.sourceScope]
 * @member {array} [properties.properties]
 * @member {object} [details]
 * @member {string} [details.self]
 * @member {string} [details.schema]
 * @member {string} [details.baseCurrency]
 * @member {string} [details.sourcePortfolioId]
 * @member {string} [details.sourceScope]
 * @member {string} [self] Link to retrieve the current entity
 * @member {string} [schema] Link to retrieve the schema for the current entity
 * @member {string} [id] Id of the portfolio
 * @member {string} [name] Name of the portfolio
 * @member {date} [created] Portfolio creation time in UTC
 * @member {string} [referencePortfolioId]
 * @member {string} [referenceScope]
 */
export interface GetPortfolioRootResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  properties?: PortfolioPropertiesResponse;
  details?: PortfolioDetailsResponse;
  self?: string;
  schema?: string;
  id?: string;
  name?: string;
  created?: Date;
  referencePortfolioId?: string;
  referenceScope?: string;
}

/**
 * @class
 * Initializes a new instance of the ListPortfolioRootsResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {array} [items]
 * @member {array} [propertySchema]
 * @member {object} [pagination]
 * @member {boolean} [pagination.finalPage]
 * @member {number} [pagination.count]
 * @member {number} [pagination.totalItems]
 * @member {number} [pagination.page]
 * @member {string} [pagination.next]
 * @member {string} [pagination.previous]
 */
export interface ListPortfolioRootsResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  items?: GetPortfolioRootResponse[];
  propertySchema?: KeyValuePairPropertyKeyFieldSchema[];
  pagination?: ResponsePagination;
}

/**
 * @class
 * Initializes a new instance of the PortfolioRootResponse class.
 * @constructor
 * @member {string} [self] Link to retrieve the current entity
 * @member {string} [schema] Link to retrieve the schema for the current entity
 * @member {string} [id] Id of the portfolio
 * @member {string} [name] Name of the portfolio
 * @member {date} [created] Portfolio creation time in UTC
 * @member {string} [referencePortfolioId]
 * @member {string} [referenceScope]
 */
export interface PortfolioRootResponse {
  self?: string;
  schema?: string;
  id?: string;
  name?: string;
  created?: Date;
  referencePortfolioId?: string;
  referenceScope?: string;
}

/**
 * @class
 * Initializes a new instance of the GetPortfolioDetailsResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {object} [root]
 * @member {string} [root.self] Link to retrieve the current entity
 * @member {string} [root.schema] Link to retrieve the schema for the current
 * entity
 * @member {string} [root.id] Id of the portfolio
 * @member {string} [root.name] Name of the portfolio
 * @member {date} [root.created] Portfolio creation time in UTC
 * @member {string} [root.referencePortfolioId]
 * @member {string} [root.referenceScope]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {string} [baseCurrency]
 * @member {string} [sourcePortfolioId]
 * @member {string} [sourceScope]
 */
export interface GetPortfolioDetailsResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  root?: PortfolioRootResponse;
  self?: string;
  schema?: string;
  baseCurrency?: string;
  sourcePortfolioId?: string;
  sourceScope?: string;
}

/**
 * @class
 * Initializes a new instance of the Holding class.
 * @constructor
 * @member {string} securityUid Id of the underlying security
 * @member {array} [properties]
 * @member {number} units Total number of units in the holding
 * @member {number} cost Total cost of the holding
 */
export interface Holding {
  securityUid: string;
  properties?: Property[];
  units: number;
  cost: number;
}

/**
 * @class
 * Initializes a new instance of the GetPortfolioHoldingsResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {object} [root]
 * @member {string} [root.self] Link to retrieve the current entity
 * @member {string} [root.schema] Link to retrieve the schema for the current
 * entity
 * @member {string} [root.id] Id of the portfolio
 * @member {string} [root.name] Name of the portfolio
 * @member {date} [root.created] Portfolio creation time in UTC
 * @member {string} [root.referencePortfolioId]
 * @member {string} [root.referenceScope]
 * @member {object} [details]
 * @member {string} [details.self]
 * @member {string} [details.schema]
 * @member {string} [details.baseCurrency]
 * @member {string} [details.sourcePortfolioId]
 * @member {string} [details.sourceScope]
 * @member {object} [properties]
 * @member {string} [properties.self]
 * @member {string} [properties.schema]
 * @member {array} [properties.propertySchema]
 * @member {string} [properties.sourcePortfolioId]
 * @member {string} [properties.sourceScope]
 * @member {array} [properties.properties]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [pagination]
 * @member {boolean} [pagination.finalPage]
 * @member {number} [pagination.count]
 * @member {number} [pagination.totalItems]
 * @member {number} [pagination.page]
 * @member {string} [pagination.next]
 * @member {string} [pagination.previous]
 * @member {array} [propertySchema]
 * @member {array} [items]
 */
export interface GetPortfolioHoldingsResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  root?: PortfolioRootResponse;
  details?: PortfolioDetailsResponse;
  properties?: PortfolioPropertiesResponse;
  self?: string;
  schema?: string;
  pagination?: ResponsePagination;
  propertySchema?: KeyValuePairPropertyKeyFieldSchema[];
  items?: Holding[];
}

/**
 * @class
 * Initializes a new instance of the UpsertPortfolioTradesResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {boolean} [validationFailed]
 * @member {array} [validationErrors]
 */
export interface UpsertPortfolioTradesResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
  validationFailed?: boolean;
  validationErrors?: any[];
}

/**
 * @class
 * Initializes a new instance of the GetPortfolioPropertiesResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {object} [root]
 * @member {string} [root.self] Link to retrieve the current entity
 * @member {string} [root.schema] Link to retrieve the schema for the current
 * entity
 * @member {string} [root.id] Id of the portfolio
 * @member {string} [root.name] Name of the portfolio
 * @member {date} [root.created] Portfolio creation time in UTC
 * @member {string} [root.referencePortfolioId]
 * @member {string} [root.referenceScope]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {array} [propertySchema]
 * @member {string} [sourcePortfolioId]
 * @member {string} [sourceScope]
 * @member {array} [properties]
 */
export interface GetPortfolioPropertiesResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  root?: PortfolioRootResponse;
  self?: string;
  schema?: string;
  propertySchema?: KeyValuePairPropertyKeyFieldSchema[];
  sourcePortfolioId?: string;
  sourceScope?: string;
  properties?: Property[];
}

/**
 * @class
 * Initializes a new instance of the Trade class.
 * @constructor
 * @member {string} tradeId
 * @member {string} type Possible values include: 'Buy', 'Sell', 'StockIn',
 * 'StockOut'
 * @member {object} securityUid
 * @member {string} [securityUid.uid]
 * @member {date} tradeDate
 * @member {date} settlementDate
 * @member {number} units
 * @member {number} tradePrice
 * @member {number} totalConsideration
 * @member {string} settlementCurrency This is the ISO three letter code
 * representing the currency
 * @member {array} [properties]
 * @member {string} [counterpartyId]
 * @member {string} source Possible values include: 'System', 'Client'
 * @member {string} [dividendState] Possible values include: 'Default',
 * 'ExDividend', 'CumDividend'
 * @member {string} [tradePriceType] Possible values include: 'Price', 'Yield',
 * 'Spread'
 * @member {string} [unitType] Possible values include: 'Nominal', 'Shares',
 * 'FaceValue', 'Contracts'
 * @member {string} [nettingSet]
 */
export interface Trade {
  tradeId: string;
  type: string;
  securityUid: SecurityUid;
  tradeDate: Date;
  settlementDate: Date;
  units: number;
  tradePrice: number;
  totalConsideration: number;
  settlementCurrency: string;
  properties?: Property[];
  counterpartyId?: string;
  source: string;
  dividendState?: string;
  tradePriceType?: string;
  unitType?: string;
  nettingSet?: string;
}

/**
 * @class
 * Initializes a new instance of the GetPortfolioTradesResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {object} [root]
 * @member {string} [root.self] Link to retrieve the current entity
 * @member {string} [root.schema] Link to retrieve the schema for the current
 * entity
 * @member {string} [root.id] Id of the portfolio
 * @member {string} [root.name] Name of the portfolio
 * @member {date} [root.created] Portfolio creation time in UTC
 * @member {string} [root.referencePortfolioId]
 * @member {string} [root.referenceScope]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [pagination]
 * @member {boolean} [pagination.finalPage]
 * @member {number} [pagination.count]
 * @member {number} [pagination.totalItems]
 * @member {number} [pagination.page]
 * @member {string} [pagination.next]
 * @member {string} [pagination.previous]
 * @member {array} [propertySchema]
 * @member {array} [items]
 */
export interface GetPortfolioTradesResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  root?: PortfolioRootResponse;
  self?: string;
  schema?: string;
  pagination?: ResponsePagination;
  propertySchema?: KeyValuePairPropertyKeyFieldSchema[];
  items?: Trade[];
}

/**
 * @class
 * Initializes a new instance of the AddPropertyResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 */
export interface AddPropertyResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
}

/**
 * @class
 * Initializes a new instance of the EntityVersionResponse class.
 * @constructor
 * @member {number} [number]
 * @member {string} [modifiedBy]
 * @member {date} [modifiedDate]
 * @member {date} [validFrom]
 * @member {date} [validTo]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 */
export interface EntityVersionResponse {
  number?: number;
  modifiedBy?: string;
  modifiedDate?: Date;
  validFrom?: Date;
  validTo?: Date;
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
}

/**
 * @class
 * Initializes a new instance of the GetPortfolioVersionsResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [pagination]
 * @member {boolean} [pagination.finalPage]
 * @member {number} [pagination.count]
 * @member {number} [pagination.totalItems]
 * @member {number} [pagination.page]
 * @member {string} [pagination.next]
 * @member {string} [pagination.previous]
 * @member {array} [items]
 */
export interface GetPortfolioVersionsResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  self?: string;
  schema?: string;
  pagination?: ResponsePagination;
  items?: EntityVersionResponse[];
}

/**
 * @class
 * Initializes a new instance of the LookupPortfolioRootResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {string} [self] Link to retrieve the current entity
 * @member {string} [schema] Link to retrieve the schema for the current entity
 * @member {string} [id] Id of the portfolio
 * @member {string} [name] Name of the portfolio
 * @member {date} [created] Portfolio creation time in UTC
 * @member {string} [referencePortfolioId]
 * @member {string} [referenceScope]
 */
export interface LookupPortfolioRootResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  self?: string;
  schema?: string;
  id?: string;
  name?: string;
  created?: Date;
  referencePortfolioId?: string;
  referenceScope?: string;
}

/**
 * @class
 * Initializes a new instance of the ProxiedSearchResult class.
 * @constructor
 * @member {string} [body]
 * @member {number} [responseCode]
 * @member {string} [error]
 */
export interface ProxiedSearchResult {
  readonly body?: string;
  readonly responseCode?: number;
  readonly error?: string;
}

/**
 * @class
 * Initializes a new instance of the PropertyDefinition class.
 * @constructor
 * A definition of a property.
 *
 * @member {string} [domain] Possible values include: 'Trade', 'Portfolio',
 * 'Security', 'Holding', 'ReferenceHolding'
 * @member {string} [lifeTime] Possible values include: 'Perpetual',
 * 'TimeVariant'
 * @member {string} [key]
 * @member {string} [valueType] Possible values include: 'String', 'Int',
 * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
 * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
 * @member {boolean} [valueRequired]
 * @member {string} [displayName]
 * @member {string} [dataFormatName]
 * @member {string} [dataFormatScope]
 * @member {string} [sort]
 */
export interface PropertyDefinition {
  domain?: string;
  lifeTime?: string;
  key?: string;
  valueType?: string;
  valueRequired?: boolean;
  displayName?: string;
  dataFormatName?: string;
  dataFormatScope?: string;
  sort?: string;
}

/**
 * @class
 * Initializes a new instance of the GetPropertyDefinitionResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {string} [domain] Possible values include: 'Trade', 'Portfolio',
 * 'Security', 'Holding', 'ReferenceHolding'
 * @member {string} [key]
 * @member {string} [valueType] Possible values include: 'String', 'Int',
 * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
 * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
 * @member {boolean} [valueRequired]
 * @member {string} [displayName]
 * @member {string} [dataFormatName]
 * @member {string} [dataFormatScope]
 * @member {string} [sort]
 * @member {string} [lifeTime] Possible values include: 'Perpetual',
 * 'TimeVariant'
 */
export interface GetPropertyDefinitionResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  domain?: string;
  key?: string;
  valueType?: string;
  valueRequired?: boolean;
  displayName?: string;
  dataFormatName?: string;
  dataFormatScope?: string;
  sort?: string;
  lifeTime?: string;
}

/**
 * @class
 * Initializes a new instance of the PropertyDefinitionKeyResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {string} [scope]
 * @member {string} [name]
 * @member {string} [key]
 * @member {string} [domain] Possible values include: 'Trade', 'Portfolio',
 * 'Security', 'Holding', 'ReferenceHolding'
 */
export interface PropertyDefinitionKeyResponse {
  self?: string;
  schema?: string;
  scope?: string;
  name?: string;
  key?: string;
  domain?: string;
}

/**
 * @class
 * Initializes a new instance of the GetPropertyKeysResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {array} [items]
 */
export interface GetPropertyKeysResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  items?: PropertyDefinitionKeyResponse[];
}

/**
 * @class
 * Initializes a new instance of the PropertyScopeResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {string} [scope]
 */
export interface PropertyScopeResponse {
  self?: string;
  schema?: string;
  scope?: string;
}

/**
 * @class
 * Initializes a new instance of the GetPropertyScopesResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {array} [items]
 */
export interface GetPropertyScopesResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  items?: PropertyScopeResponse[];
}

/**
 * @class
 * Initializes a new instance of the PropertyDataFormat class.
 * @constructor
 * @member {string} [formatType] Possible values include: 'Basic', 'Limited',
 * 'Currency'
 * @member {string} [scope]
 * @member {string} [name]
 * @member {number} [order]
 * @member {string} [displayName]
 * @member {string} [valueType] Possible values include: 'String', 'Int',
 * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
 * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
 */
export interface PropertyDataFormat {
  readonly formatType?: string;
  readonly scope?: string;
  readonly name?: string;
  readonly order?: number;
  readonly displayName?: string;
  readonly valueType?: string;
}

/**
 * @class
 * Initializes a new instance of the PropertyDataFormatResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [item]
 * @member {string} [item.formatType] Possible values include: 'Basic',
 * 'Limited', 'Currency'
 * @member {string} [item.scope]
 * @member {string} [item.name]
 * @member {number} [item.order]
 * @member {string} [item.displayName]
 * @member {string} [item.valueType] Possible values include: 'String', 'Int',
 * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
 * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
 */
export interface PropertyDataFormatResponse {
  self?: string;
  schema?: string;
  item?: PropertyDataFormat;
}

/**
 * @class
 * Initializes a new instance of the ListPropertyDataFormatResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {array} [items]
 */
export interface ListPropertyDataFormatResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  items?: PropertyDataFormatResponse[];
}

/**
 * @class
 * Initializes a new instance of the GetPropertyDataFormatResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [item]
 * @member {string} [item.formatType] Possible values include: 'Basic',
 * 'Limited', 'Currency'
 * @member {string} [item.scope]
 * @member {string} [item.name]
 * @member {number} [item.order]
 * @member {string} [item.displayName]
 * @member {string} [item.valueType] Possible values include: 'String', 'Int',
 * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
 * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
 */
export interface GetPropertyDataFormatResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  item?: PropertyDataFormat;
}

/**
 * @class
 * Initializes a new instance of the ReferencePortfolioResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [referencePortfolio]
 * @member {string} [referencePortfolio.id] Portfolio id, must be unique across
 * all portfolios
 * @member {string} [referencePortfolio.name] Portfolio name, must be unique
 * across all portfolios
 * @member {date} [referencePortfolio.created] The original creation date, not
 * the effective date
 * of subsequent modification.
 * @member {string} [referencePortfolio.referencePortfolioId] If creating a
 * derived portfolio, this is the portfolio id of the reference portfolio
 * @member {string} [referencePortfolio.referenceScope] If creating a derived
 * portfolio, this is the scope of the reference portfolio
 * @member {string} [referencePortfolio.type] Possible values include:
 * 'Portfolio', 'ReferencePortfolio'
 */
export interface ReferencePortfolioResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
  referencePortfolio?: Portfolio;
}

/**
 * @class
 * Initializes a new instance of the ReferencePortfolioConstituent class.
 * @constructor
 * @member {object} [id] Identifier for this constituent
 * @member {string} [id.uid]
 * @member {array} [properties]
 * @member {number} [quantity]
 * @member {string} [type] Possible values include: 'Shares', 'Weight',
 * 'Nominal'
 */
export interface ReferencePortfolioConstituent {
  id?: SecurityUid;
  properties?: Property[];
  quantity?: number;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the UpsertReferencePortfolioConstituentsResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 */
export interface UpsertReferencePortfolioConstituentsResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
}

/**
 * @class
 * Initializes a new instance of the ReferencePortfolioConstituentsResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {array} [propertySchema]
 * @member {array} [constituents]
 */
export interface ReferencePortfolioConstituentsResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  propertySchema?: KeyValuePairPropertyKeyFieldSchema[];
  constituents?: ReferencePortfolioConstituent[];
}

/**
 * @class
 * Initializes a new instance of the InsertResultsRequest class.
 * @constructor
 * @member {object} [data]
 */
export interface InsertResultsRequest {
  readonly data?: any;
}

/**
 * @class
 * Initializes a new instance of the KeyValuePairStringFieldSchema class.
 * @constructor
 * @member {string} [key]
 * @member {object} [value]
 * @member {string} [value.scope]
 * @member {string} [value.name]
 * @member {string} [value.displayName]
 * @member {string} [value.type] Possible values include: 'String', 'Int',
 * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
 * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
 * @member {boolean} [value.isMetric]
 * @member {number} [value.displayOrder]
 * @member {object} [value.propertySchema]
 */
export interface KeyValuePairStringFieldSchema {
  readonly key?: string;
  readonly value?: FieldSchema;
}

/**
 * @class
 * Initializes a new instance of the GetSchemaResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {string} [self]
 * @member {string} [schema]
 * @member {array} [items]
 * @member {array} [propertySchema]
 */
export interface GetSchemaResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  self?: string;
  schema?: string;
  items?: KeyValuePairStringFieldSchema[];
  propertySchema?: KeyValuePairPropertyKeyFieldSchema[];
}

/**
 * @class
 * Initializes a new instance of the KeyValuePairCodeTypeString class.
 * @constructor
 * @member {string} [key] Possible values include: 'Undefined',
 * 'ReutersAssetId', 'CINS', 'Isin', 'Sedol', 'Cusip', 'ClientInternal',
 * 'Figi', 'Wertpapier'
 * @member {string} [value]
 */
export interface KeyValuePairCodeTypeString {
  readonly key?: string;
  readonly value?: string;
}

/**
 * @class
 * Initializes a new instance of the InstrumentDefinition class.
 * @constructor
 * An opaque instrument definition.
 * Understood by some analytics library.
 *
 * @member {string} [content]
 */
export interface InstrumentDefinition {
  readonly content?: string;
}

/**
 * @class
 * Initializes a new instance of the ClientSecurityDefinitionData class.
 * @constructor
 * @member {string} [clientSecurityId]
 * @member {string} [name]
 * @member {array} [properties]
 * @member {array} [aliases]
 * @member {string} [lookThroughPortfolioId]
 * @member {string} [lookThroughPortfolioScope]
 * @member {object} [instrument] There could be multiple underlying instrument
 * definitions (same
 * instrument but different format), but for now store one.
 * @member {string} [instrument.content]
 */
export interface ClientSecurityDefinitionData {
  clientSecurityId?: string;
  name?: string;
  properties?: Property[];
  aliases?: KeyValuePairCodeTypeString[];
  lookThroughPortfolioId?: string;
  lookThroughPortfolioScope?: string;
  instrument?: InstrumentDefinition;
}

/**
 * @class
 * Initializes a new instance of the GetSecurityRootResponseAliases class.
 * @constructor
 * @member {string} [undefined]
 * @member {string} [reutersAssetId]
 * @member {string} [cINS]
 * @member {string} [isin]
 * @member {string} [sedol]
 * @member {string} [cusip]
 * @member {string} [clientInternal]
 * @member {string} [figi]
 * @member {string} [wertpapier]
 */
export interface GetSecurityRootResponseAliases {
  undefined?: string;
  reutersAssetId?: string;
  cINS?: string;
  isin?: string;
  sedol?: string;
  cusip?: string;
  clientInternal?: string;
  figi?: string;
  wertpapier?: string;
}

/**
 * @class
 * Initializes a new instance of the GetSecurityRootResponse class.
 * @constructor
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [uid]
 * @member {string} [uid.uid]
 * @member {number} [version]
 * @member {string} [commonName]
 * @member {object} [aliases]
 * @member {string} [aliases.undefined]
 * @member {string} [aliases.reutersAssetId]
 * @member {string} [aliases.cINS]
 * @member {string} [aliases.isin]
 * @member {string} [aliases.sedol]
 * @member {string} [aliases.cusip]
 * @member {string} [aliases.clientInternal]
 * @member {string} [aliases.figi]
 * @member {string} [aliases.wertpapier]
 */
export interface GetSecurityRootResponse {
  error?: ErrorMessage;
  meta?: ResponseMeta;
  self?: string;
  schema?: string;
  uid?: SecurityUid;
  version?: number;
  commonName?: string;
  aliases?: GetSecurityRootResponseAliases;
}

/**
 * @class
 * Initializes a new instance of the TryAddClientSecuritiesResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {array} [items]
 * @member {object} [failedItems]
 */
export interface TryAddClientSecuritiesResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
  items?: GetSecurityRootResponse[];
  failedItems?: { [propertyName: string]: ErrorMessage };
}

/**
 * @class
 * Initializes a new instance of the TryDeleteClientSecuritiesResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {array} [failed]
 * @member {object} [pagination]
 * @member {boolean} [pagination.finalPage]
 * @member {number} [pagination.count]
 * @member {number} [pagination.totalItems]
 * @member {number} [pagination.page]
 * @member {string} [pagination.next]
 * @member {string} [pagination.previous]
 */
export interface TryDeleteClientSecuritiesResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  failed?: SecurityUid[];
  pagination?: ResponsePagination;
}

/**
 * @class
 * Initializes a new instance of the LookupSecuritiesFromCodesResponse class.
 * @constructor
 * @member {string} [self]
 * @member {string} [schema]
 * @member {object} [error]
 * @member {number} [error.status] The status code that will be returned to the
 * client
 * @member {string} [error.code] The Finbourne specific error-code that
 * encapsulates the specific issue encountered. Possible values include:
 * 'PersonalisationNotFound', 'NonRecursivePersonalisation', 'VersionNotFound',
 * 'TradeNotFound', 'SecurityNotFound', 'PropertyNotFound',
 * 'PortfolioRecursionDepth', 'PortfolioPropertiesNotFound', 'GroupNotFound',
 * 'PortfolioNotFound', 'EntitySchemaNotFound', 'PortfolioNameNotFound',
 * 'PortfolioAlreadyExists', 'OrphanedPortfolio',
 * 'MultiplePropertyDefinitionNotFound', 'InvalidProperty',
 * 'InvalidBasePortfolioAction', 'InsufficientAuthClaims', 'MissingBaseClaims',
 * 'MissingIdentity', 'PropertyNotDefined', 'CannotDeleteSystemProperty',
 * 'CannotModifyImmutablePropertyField', 'PropertyAlreadyExists',
 * 'InvalidPropertyLifeTime', 'RequiredFieldIsMissing',
 * 'CannotModifyDefaultPropertyFormat', 'GroupAlreadyExists',
 * 'NoSuchPropertyDataFormat', 'CannotAddMissingItemToGroup',
 * 'CannotAddAGroupToItself', 'ValidationError',
 * 'LoopDetectedInGroupHierarchy', 'AddingSubGroupCreatedALoop',
 * 'SubGroupAlreadyExists', 'PortfolioAlreadyExistsInGroup',
 * 'MissingClassificationData', 'PriceSourceNotFound', 'AnalyticStoreNotFound',
 * 'InvalidDateFormat', 'AnalyticStoreAlreadyExists',
 * 'ClientSecurityAlreadyExists', 'DuplicateParameterException',
 * 'OneOrMoreFailures', 'OneOrMoreMissing', 'ResultsNotFound',
 * 'OrderFieldNotInResultSet', 'OperationFailedEnum', 'ElasticSearchError',
 * 'InvalidParameterValue', 'Unknown'
 * @member {string} [error.property] The part of the resource which provoked
 * the error (e.g. field)
 * @member {string} [error.message] The non-technical-user friendly message
 * describing the error and how it might be remedied.
 * @member {string} [error.developerMessage] A technical error message that
 * contains the details of the issue and how it might be fixed.
 * @member {string} [error.moreInfo] A link to the endpoint that can provide
 * the dev with more information about that class of error.
 * @member {object} [meta]
 * @member {number} [meta.duration]
 * @member {boolean} [meta.success]
 * @member {string} [meta.requestId]
 * @member {object} [version]
 * @member {number} [version.number] The monotonically-increasing version
 * number for this individual version.
 * @member {date} [version.validFromDate] The time at which this version became
 * valid.
 * @member {date} [version.validToDate] The time at which this version ceased
 * to be valid.
 * If this is most recent version, this value will be set to
 * DateTimeOffset.MaxValue.
 * @member {object} [version.asAtDate] The time at which this version was
 * durably persisted.
 * @member {string} [version.updatedBy] The name of the person or system which
 * created this version.
 * @member {array} [items]
 * @member {array} [propertySchema]
 * @member {object} [pagination]
 * @member {boolean} [pagination.finalPage]
 * @member {number} [pagination.count]
 * @member {number} [pagination.totalItems]
 * @member {number} [pagination.page]
 * @member {string} [pagination.next]
 * @member {string} [pagination.previous]
 */
export interface LookupSecuritiesFromCodesResponse {
  self?: string;
  schema?: string;
  error?: ErrorMessage;
  meta?: ResponseMeta;
  version?: Version;
  items?: GetSecurityRootResponse[];
  propertySchema?: KeyValuePairPropertyKeyFieldSchema[];
  pagination?: ResponsePagination;
}
