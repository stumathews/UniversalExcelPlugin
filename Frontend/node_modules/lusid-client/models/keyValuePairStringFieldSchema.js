/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a KeyValuePairStringFieldSchema.
 */
class KeyValuePairStringFieldSchema {
  /**
   * Create a KeyValuePairStringFieldSchema.
   * @member {string} [key]
   * @member {object} [value]
   * @member {string} [value.scope]
   * @member {string} [value.name]
   * @member {string} [value.displayName]
   * @member {string} [value.type] Possible values include: 'String', 'Int',
   * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
   * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
   * @member {boolean} [value.isMetric]
   * @member {number} [value.displayOrder]
   * @member {object} [value.propertySchema]
   */
  constructor() {
  }

  /**
   * Defines the metadata of KeyValuePairStringFieldSchema
   *
   * @returns {object} metadata of KeyValuePairStringFieldSchema
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'KeyValuePair_String_FieldSchema_',
      type: {
        name: 'Composite',
        className: 'KeyValuePairStringFieldSchema',
        modelProperties: {
          key: {
            required: false,
            readOnly: true,
            serializedName: 'key',
            type: {
              name: 'String'
            }
          },
          value: {
            required: false,
            readOnly: true,
            serializedName: 'value',
            type: {
              name: 'Composite',
              className: 'FieldSchema'
            }
          }
        }
      }
    };
  }
}

module.exports = KeyValuePairStringFieldSchema;
