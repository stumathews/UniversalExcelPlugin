/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a PropertyDataFormat.
 */
class PropertyDataFormat {
  /**
   * Create a PropertyDataFormat.
   * @member {string} [formatType] Possible values include: 'Basic', 'Limited',
   * 'Currency'
   * @member {string} [scope]
   * @member {string} [name]
   * @member {number} [order]
   * @member {string} [displayName]
   * @member {string} [valueType] Possible values include: 'String', 'Int',
   * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
   * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
   */
  constructor() {
  }

  /**
   * Defines the metadata of PropertyDataFormat
   *
   * @returns {object} metadata of PropertyDataFormat
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PropertyDataFormat',
      type: {
        name: 'Composite',
        className: 'PropertyDataFormat',
        modelProperties: {
          formatType: {
            required: false,
            readOnly: true,
            serializedName: 'formatType',
            type: {
              name: 'String'
            }
          },
          scope: {
            required: false,
            readOnly: true,
            serializedName: 'scope',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          order: {
            required: false,
            readOnly: true,
            serializedName: 'order',
            type: {
              name: 'Number'
            }
          },
          displayName: {
            required: false,
            readOnly: true,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          valueType: {
            required: false,
            readOnly: true,
            serializedName: 'valueType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PropertyDataFormat;
