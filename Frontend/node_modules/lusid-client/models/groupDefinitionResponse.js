/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a GroupDefinitionResponse.
 */
class GroupDefinitionResponse {
  /**
   * Create a GroupDefinitionResponse.
   * @member {string} [self]
   * @member {string} [schema]
   * @member {string} [id]
   * @member {string} [name]
   * @member {string} [description]
   * @member {array} [values]
   * @member {array} [subGroups]
   * @member {object} [version]
   * @member {number} [version.number] The monotonically-increasing version
   * number for this individual version.
   * @member {date} [version.validFromDate] The time at which this version
   * became valid.
   * @member {date} [version.validToDate] The time at which this version ceased
   * to be valid.
   * If this is most recent version, this value will be set to
   * DateTimeOffset.MaxValue.
   * @member {object} [version.asAtDate] The time at which this version was
   * durably persisted.
   * @member {string} [version.updatedBy] The name of the person or system
   * which created this version.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GroupDefinitionResponse
   *
   * @returns {object} metadata of GroupDefinitionResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GroupDefinitionResponse',
      type: {
        name: 'Composite',
        className: 'GroupDefinitionResponse',
        modelProperties: {
          self: {
            required: false,
            serializedName: 'self',
            type: {
              name: 'String'
            }
          },
          schema: {
            required: false,
            serializedName: 'schema',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          values: {
            required: false,
            serializedName: 'values',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ScopedIdentifierElementType',
                  type: {
                    name: 'Composite',
                    className: 'ScopedIdentifier'
                  }
              }
            }
          },
          subGroups: {
            required: false,
            serializedName: 'subGroups',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ScopedIdentifierElementType',
                  type: {
                    name: 'Composite',
                    className: 'ScopedIdentifier'
                  }
              }
            }
          },
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'Composite',
              className: 'Version'
            }
          }
        }
      }
    };
  }
}

module.exports = GroupDefinitionResponse;
