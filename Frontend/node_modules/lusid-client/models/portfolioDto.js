/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a PortfolioDto.
 */
class PortfolioDto {
  /**
   * Create a PortfolioDto.
   * @member {string} [href] Link to retrieve the current entity
   * @member {object} [id] Id of the portfolio
   * @member {string} [id.scope]
   * @member {string} [id.id]
   * @member {string} [name] Name of the portfolio
   * @member {date} [created] Portfolio creation time in UTC
   * @member {object} [basePortfolio]
   * @member {string} [basePortfolio.scope]
   * @member {string} [basePortfolio.id]
   * @member {object} [version] The version of the portfolio
   * @member {date} [version.validFromDate] The time at which this version
   * became valid.
   * @member {object} [version.asAtDate] The time at which this version was
   * durably persisted.
   * @member {string} [version.updatedBy] The name of the person or system
   * which created this version.
   * @member {string} [version.href]
   * @member {array} [version._links]
   * @member {array} [_links]
   */
  constructor() {
  }

  /**
   * Defines the metadata of PortfolioDto
   *
   * @returns {object} metadata of PortfolioDto
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PortfolioDto',
      type: {
        name: 'Composite',
        className: 'PortfolioDto',
        modelProperties: {
          href: {
            required: false,
            serializedName: 'href',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'Composite',
              className: 'DtoId'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          created: {
            required: false,
            serializedName: 'created',
            type: {
              name: 'DateTime'
            }
          },
          basePortfolio: {
            required: false,
            serializedName: 'basePortfolio',
            type: {
              name: 'Composite',
              className: 'DtoId'
            }
          },
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'Composite',
              className: 'VersionDto'
            }
          },
          _links: {
            required: false,
            serializedName: '_links',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'LinkElementType',
                  type: {
                    name: 'Composite',
                    className: 'Link'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = PortfolioDto;
