/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A definition of a property.
 *
 */
class PropertyDefinition {
  /**
   * Create a PropertyDefinition.
   * @member {string} [domain] Possible values include: 'Trade', 'Portfolio',
   * 'Security', 'Holding', 'ReferenceHolding'
   * @member {string} [lifeTime] Possible values include: 'Perpetual',
   * 'TimeVariant'
   * @member {string} [key]
   * @member {string} [valueType] Possible values include: 'String', 'Int',
   * 'Decimal', 'DateTime', 'Boolean', 'Map', 'PropertyArray', 'ArrayOfKeys',
   * 'Percentage', 'Currency', 'BenchmarkType', 'InternalId'
   * @member {boolean} [valueRequired]
   * @member {string} [displayName]
   * @member {string} [dataFormatName]
   * @member {string} [dataFormatScope]
   * @member {string} [sort]
   */
  constructor() {
  }

  /**
   * Defines the metadata of PropertyDefinition
   *
   * @returns {object} metadata of PropertyDefinition
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PropertyDefinition',
      type: {
        name: 'Composite',
        className: 'PropertyDefinition',
        modelProperties: {
          domain: {
            required: false,
            serializedName: 'domain',
            type: {
              name: 'String'
            }
          },
          lifeTime: {
            required: false,
            serializedName: 'lifeTime',
            type: {
              name: 'String'
            }
          },
          key: {
            required: false,
            serializedName: 'key',
            type: {
              name: 'String'
            }
          },
          valueType: {
            required: false,
            serializedName: 'valueType',
            type: {
              name: 'String'
            }
          },
          valueRequired: {
            required: false,
            serializedName: 'valueRequired',
            type: {
              name: 'Boolean'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          dataFormatName: {
            required: false,
            serializedName: 'dataFormatName',
            type: {
              name: 'String'
            }
          },
          dataFormatScope: {
            required: false,
            serializedName: 'dataFormatScope',
            type: {
              name: 'String'
            }
          },
          sort: {
            required: false,
            serializedName: 'sort',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PropertyDefinition;
