/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Specification object for the parameters of an aggregation
 *
 */
class AggregationRequest {
  /**
   * Create a AggregationRequest.
   * @member {string} [recipeScope]
   * @member {string} [recipeKey]
   * @member {boolean} [loadReferencePortfolio]
   * @member {date} [asAt] The asAt date to use
   * @member {date} [effectiveDate]
   * @member {array} [metrics]
   * @member {array} [groupBy]
   * @member {array} [filters]
   * @member {number} [limit]
   * @member {string} [sort]
   */
  constructor() {
  }

  /**
   * Defines the metadata of AggregationRequest
   *
   * @returns {object} metadata of AggregationRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AggregationRequest',
      type: {
        name: 'Composite',
        className: 'AggregationRequest',
        modelProperties: {
          recipeScope: {
            required: false,
            serializedName: 'recipeScope',
            type: {
              name: 'String'
            }
          },
          recipeKey: {
            required: false,
            serializedName: 'recipeKey',
            type: {
              name: 'String'
            }
          },
          loadReferencePortfolio: {
            required: false,
            serializedName: 'loadReferencePortfolio',
            type: {
              name: 'Boolean'
            }
          },
          asAt: {
            required: false,
            serializedName: 'asAt',
            type: {
              name: 'DateTime'
            }
          },
          effectiveDate: {
            required: false,
            serializedName: 'effectiveDate',
            type: {
              name: 'DateTime'
            }
          },
          metrics: {
            required: false,
            serializedName: 'metrics',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AggregateSpecElementType',
                  type: {
                    name: 'Composite',
                    className: 'AggregateSpec'
                  }
              }
            }
          },
          groupBy: {
            required: false,
            serializedName: 'groupBy',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          filters: {
            required: false,
            serializedName: 'filters',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PropertyFilterElementType',
                  type: {
                    name: 'Composite',
                    className: 'PropertyFilter'
                  }
              }
            }
          },
          limit: {
            required: false,
            serializedName: 'limit',
            type: {
              name: 'Number'
            }
          },
          sort: {
            required: false,
            serializedName: 'sort',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AggregationRequest;
